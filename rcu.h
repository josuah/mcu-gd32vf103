#include <stddef.h>
#include <stdint.h>

#define RCU ((struct sdk_rcu *)0x40021000)

struct sdk_rcu {

	/* 0x00: Control register */
	uint32_t volatile CTL;
#define RCU_CTL_IRC8MEN				(1u << 0)
#define RCU_CTL_IRC8MSTB			(1u << 1)
#define RCU_CTL_IRC8MADJ(x)			((x) << 3)
#define RCU_CTL_IRC8MCALIB(x)			((x) << 8)
#define RCU_CTL_HXTALEN				(1u << 16)
#define RCU_CTL_HXTALSTB			(1u << 17)
#define RCU_CTL_HXTALBPS			(1u << 18)
#define RCU_CTL_CKMEN(x)			((x) << 19)
#define RCU_CTL_PLLEN				(1u << 24)
#define RCU_CTL_PLLSTB				(1u << 25)
#define RCU_CTL_PLL1EN				(1u << 26)
#define RCU_CTL_PLL1STB				(1u << 27)
#define RCU_CTL_PLL2EN				(1u << 28)
#define RCU_CTL_PLL2STB				(1u << 29)

	/* 0x04: Clock configuration register 0 */
	uint32_t volatile CFG0;
#define RCU_CFG0_SCS(x)				((x) << 0)
#define RCU_CFG0_SCS_MASK			RCU_CFG0_SCS(B00000011)
#define RCU_CFG0_SCS_IRC8M			B00000000
#define RCU_CFG0_SCS_HXTAL			B00000001
#define RCU_CFG0_SCS_PLL			B00000010
#define RCU_CFG0_SCSS(x)			((x) << 2)
#define RCU_CFG0_SCSS_MASK			RCU_CFG0_SCSS(B00000011)
#define RCU_CFG0_SCSS_IRC8M			B00000000
#define RCU_CFG0_SCSS_HXTAL			B00000001
#define RCU_CFG0_SCSS_PLL			B00000010
#define RCU_CFG0_AHBPSC(x)			((x) << 4)
#define RCU_CFG0_AHBPSC_DIV2			B00000000
#define RCU_CFG0_AHBPSC_DIV4			B00000001
#define RCU_CFG0_AHBPSC_DIV8			B00000010
#define RCU_CFG0_AHBPSC_DIV16			B00000011
#define RCU_CFG0_AHBPSC_DIV64			B00000100
#define RCU_CFG0_AHBPSC_DIV128			B00000101
#define RCU_CFG0_AHBPSC_DIV256			B00000110
#define RCU_CFG0_AHBPSC_DIV512			B00000111
#define RCU_CFG0_APB1PSC(x)			((x) << 8)
#define RCU_CFG0_APB2PSC(x)			((x) << 11)
#define RCU_CFG0_APBPSC_MASK			RCU_CFG0_APB2PSC(B00000111)
#define RCU_CFG0_APBPSC_NORM			B00000000
#define RCU_CFG0_APBPSC_DIV2			B00000001
#define RCU_CFG0_APBPSC_DIV4			B00000010
#define RCU_CFG0_APBPSC_DIV8			B00000011
#define RCU_CFG0_APBPSC_DIV16			B00000111
#define RCU_CFG0_PLLSEL				(1u << 16)
#define RCU_CFG0_PREDV0_LSB			(1u << 17)
#define RCU_CFG0_PLLMF(x)			((x) >> 4 << 18 | ((x) & B00001111) << 29)
#define RCU_CFG0_PLLMF_MASK			RCU_CFG0_PLLMF(B00011111)
#define RCU_CFG0_PLLMF_X2			B00000000
#define RCU_CFG0_PLLMF_X3			B00000001
#define RCU_CFG0_PLLMF_X4			B00000010
#define RCU_CFG0_PLLMF_X5			B00000011
#define RCU_CFG0_PLLMF_X6			B00000100
#define RCU_CFG0_PLLMF_X7			B00000101
#define RCU_CFG0_PLLMF_X8			B00000110
#define RCU_CFG0_PLLMF_X9			B00000111
#define RCU_CFG0_PLLMF_X10			B00001000
#define RCU_CFG0_PLLMF_X11			B00001001
#define RCU_CFG0_PLLMF_X12			B00001010
#define RCU_CFG0_PLLMF_X13			B00001011
#define RCU_CFG0_PLLMF_X14			B00001100
#define RCU_CFG0_PLLMF_X6_5			B00001101
#define RCU_CFG0_PLLMF_X15			B00001110
#define RCU_CFG0_PLLMF_X16			B00001111
#define RCU_CFG0_PLLMF_X17			B00010000
#define RCU_CFG0_PLLMF_X18			B00010001
#define RCU_CFG0_PLLMF_X19			B00010010
#define RCU_CFG0_PLLMF_X20			B00010011
#define RCU_CFG0_PLLMF_X21			B00010100
#define RCU_CFG0_PLLMF_X22			B00010101
#define RCU_CFG0_PLLMF_X23			B00010110
#define RCU_CFG0_PLLMF_X24			B00010111
#define RCU_CFG0_PLLMF_X25			B00011000
#define RCU_CFG0_PLLMF_X26			B00011001
#define RCU_CFG0_PLLMF_X27			B00011010
#define RCU_CFG0_PLLMF_X28			B00011011
#define RCU_CFG0_PLLMF_X29			B00011100
#define RCU_CFG0_PLLMF_X30			B00011101
#define RCU_CFG0_PLLMF_X31			B00011110
#define RCU_CFG0_PLLMF_X32			B00011111
#define RCU_CFG0_USBFSPSC(x)			((x) << 22)
#define RCU_CFG0_USBFSPSC_MASK			RCU_CFG0_USBFSPSC(B00000011)
#define RCU_CFG0_USBFSPSC_DIV1_5		B00000000
#define RCU_CFG0_USBFSPSC_NORM			B00000001
#define RCU_CFG0_USBFSPSC_DIV2_5		B00000010
#define RCU_CFG0_USBFSPSC_DIV2			B00000011
#define RCU_CFG0_CKOUT0SEL(x)			((x) << 24)
#define RCU_CFG0_CKOUT0SEL_MASK			RCU_CFG0_CKOUT0SEL(B00001111)
#define RCU_CFG0_CKOUT0SEL_OFF			B00000000
#define RCU_CFG0_CKOUT0SEL_SYS			B00000100
#define RCU_CFG0_CKOUT0SEL_8MHZ			B00000101
#define RCU_CFG0_CKOUT0SEL_EXTOSC		B00001100
#define RCU_CFG0_CKOUT0SEL_PLLDIV2		B00000111
#define RCU_CFG0_CKOUT0SEL_PLL1			B00001000
#define RCU_CFG0_CKOUT0SEL_PLL2DIV2		B00001001
#define RCU_CFG0_CKOUT0SEL_EXT1			B00001010
#define RCU_CFG0_CKOUT0SEL_PLL2			B00001011
#define RCU_CFG0_ADCPSC(x)			((x) >> 2 << 28 | ((x) & B00000011) << 14)
#define RCU_CFG0_ADCPSC_MASK			RCU_CFG0_ADCPSC(B00000111)
#define RCU_CFG0_ADCPSC_DIV2			B00000000
#define RCU_CFG0_ADCPSC_DIV4			B00000001
#define RCU_CFG0_ADCPSC_DIV6			B00000010
#define RCU_CFG0_ADCPSC_DIV8			B00000011
#define RCU_CFG0_ADCPSC_DIV12			B00000101
#define RCU_CFG0_ADCPSC_DIV16			B00000111

	/* 0x08: Clock interrupt register */
	uint32_t volatile INT;
#define RCU_INT_IRC40KSTBIF			(1u << 0)
#define RCU_INT_LXTALSTBIF			(1u << 1)
#define RCU_INT_IRC8MSTBIF			(1u << 2)
#define RCU_INT_HXTALSTBIF			(1u << 3)
#define RCU_INT_PLLSTBIF			(1u << 4)
#define RCU_INT_PLL1STBIF			(1u << 5)
#define RCU_INT_PLL2STBIF			(1u << 6)
#define RCU_INT_CKMIF				(1u << 7)
#define RCU_INT_IRC40KSTBIE			(1u << 8)
#define RCU_INT_LXTALSTBIE			(1u << 9)
#define RCU_INT_IRC8MSTBIE			(1u << 10)
#define RCU_INT_HXTALSTBIE			(1u << 11)
#define RCU_INT_PLLSTBIE			(1u << 12)
#define RCU_INT_PLL1STBIE			(1u << 13)
#define RCU_INT_PLL2STBIE			(1u << 14)
#define RCU_INT_IRC40KSTBIC			(1u << 16)
#define RCU_INT_LXTALSTBIC			(1u << 17)
#define RCU_INT_IRC8MSTBIC			(1u << 18)
#define RCU_INT_HXTALSTBIC			(1u << 19)
#define RCU_INT_PLLSTBIC			(1u << 20)
#define RCU_INT_PLL1STBIC			(1u << 21)
#define RCU_INT_PLL2STBIC			(1u << 22)
#define RCU_INT_CKMIC				(1u << 23)

	/* 0x0C: APB2 reset register */
	uint32_t volatile APB2RST;
#define RCU_APB2RST_AFRST			(1u << 0)
#define RCU_APB2RST_PARST			(1u << 2)
#define RCU_APB2RST_PBRST			(1u << 3)
#define RCU_APB2RST_PCRST			(1u << 4)
#define RCU_APB2RST_PDRST			(1u << 5)
#define RCU_APB2RST_PERST			(1u << 6)
#define RCU_APB2RST_ADC0RST			(1u << 9)
#define RCU_APB2RST_ADC1RST			(1u << 10)
#define RCU_APB2RST_TIMER0RST			(1u << 11)
#define RCU_APB2RST_SPI0RST			(1u << 12)
#define RCU_APB2RST_USART0RST			(1u << 14)

	/* 0x10: APB1 reset register */
	uint32_t volatile APB1RST;
#define RCU_APB1RST_TIMER1RST			(1u << 0)
#define RCU_APB1RST_TIMER2RST			(1u << 1)
#define RCU_APB1RST_TIMER3RST			(1u << 2)
#define RCU_APB1RST_TIMER4RST			(1u << 3)
#define RCU_APB1RST_TIMER5RST			(1u << 4)
#define RCU_APB1RST_TIMER6RST			(1u << 5)
#define RCU_APB1RST_WWDGTRST			(1u << 11)
#define RCU_APB1RST_SPI1RST			(1u << 14)
#define RCU_APB1RST_SPI2RST			(1u << 15)
#define RCU_APB1RST_USART1RST			(1u << 17)
#define RCU_APB1RST_USART2RST			(1u << 18)
#define RCU_APB1RST_UART3RST			(1u << 19)
#define RCU_APB1RST_UART4RST			(1u << 20)
#define RCU_APB1RST_I2C0RST			(1u << 21)
#define RCU_APB1RST_I2C1RST			(1u << 22)
#define RCU_APB1RST_CAN0RST			(1u << 25)
#define RCU_APB1RST_CAN1RST			(1u << 26)
#define RCU_APB1RST_BKPIRST			(1u << 27)
#define RCU_APB1RST_PMURST			(1u << 28)
#define RCU_APB1RST_DACRST			(1u << 29)
#define RCU_APB1RST_TIMER1RST			(1u << 0)
#define RCU_APB1RST_TIMER2RST			(1u << 1)
#define RCU_APB1RST_TIMER3RST			(1u << 2)
#define RCU_APB1RST_TIMER4RST			(1u << 3)
#define RCU_APB1RST_TIMER5RST			(1u << 4)
#define RCU_APB1RST_TIMER6RST			(1u << 5)
#define RCU_APB1RST_WWDGTRST			(1u << 11)
#define RCU_APB1RST_SPI1RST			(1u << 14)
#define RCU_APB1RST_SPI2RST			(1u << 15)
#define RCU_APB1RST_USART1RST			(1u << 17)
#define RCU_APB1RST_USART2RST			(1u << 18)
#define RCU_APB1RST_UART3RST			(1u << 19)
#define RCU_APB1RST_UART4RST			(1u << 20)
#define RCU_APB1RST_I2C0RST			(1u << 21)
#define RCU_APB1RST_I2C1RST			(1u << 22)
#define RCU_APB1RST_CAN0RST			(1u << 25)
#define RCU_APB1RST_CAN1RST			(1u << 26)
#define RCU_APB1RST_BKPIRST			(1u << 27)
#define RCU_APB1RST_PMURST			(1u << 28)
#define RCU_APB1RST_DACRST			(1u << 29)

	/* 0x14: AHB enable register */
	uint32_t volatile AHBEN;
#define RCU_AHBEN_DMA0EN			(1u << 0)
#define RCU_AHBEN_DMA1EN			(1u << 1)
#define RCU_AHBEN_SRAMSPEN			(1u << 2)
#define RCU_AHBEN_FMCSPEN			(1u << 4)
#define RCU_AHBEN_CRCEN				(1u << 6)
#define RCU_AHBEN_EXMCEN			(1u << 8)
#define RCU_AHBEN_USBFSEN			(1u << 12)

	/* 0x18: APB2 enable register */
	uint32_t volatile APB2EN;
#define RCU_APB2EN_AFEN				(1u << 0)
#define RCU_APB2EN_PAEN				(1u << 2)
#define RCU_APB2EN_PBEN				(1u << 3)
#define RCU_APB2EN_PCEN				(1u << 4)
#define RCU_APB2EN_PDEN				(1u << 5)
#define RCU_APB2EN_PEEN				(1u << 6)
#define RCU_APB2EN_ADC0EN			(1u << 9)
#define RCU_APB2EN_ADC1EN			(1u << 10)
#define RCU_APB2EN_TIMER0EN			(1u << 11)
#define RCU_APB2EN_SPI0EN			(1u << 12)
#define RCU_APB2EN_USART0EN			(1u << 14)

	/* 0x1C: APB1 enable register */
	uint32_t volatile APB1EN;
#define RCU_APB1EN_TIMER1EN			(1u << 0)
#define RCU_APB1EN_TIMER2EN			(1u << 1)
#define RCU_APB1EN_TIMER3EN			(1u << 2)
#define RCU_APB1EN_TIMER4EN			(1u << 3)
#define RCU_APB1EN_TIMER5EN			(1u << 4)
#define RCU_APB1EN_TIMER6EN			(1u << 5)
#define RCU_APB1EN_WWDGTEN			(1u << 11)
#define RCU_APB1EN_SPI1EN			(1u << 14)
#define RCU_APB1EN_SPI2EN			(1u << 15)
#define RCU_APB1EN_USART1EN			(1u << 17)
#define RCU_APB1EN_USART2EN			(1u << 18)
#define RCU_APB1EN_UART3EN			(1u << 19)
#define RCU_APB1EN_UART4EN			(1u << 20)
#define RCU_APB1EN_I2C0EN			(1u << 21)
#define RCU_APB1EN_I2C1EN			(1u << 22)
#define RCU_APB1EN_CAN0EN			(1u << 25)
#define RCU_APB1EN_CAN1EN			(1u << 26)
#define RCU_APB1EN_BKPIEN			(1u << 27)
#define RCU_APB1EN_PMUEN			(1u << 28)
#define RCU_APB1EN_DACEN			(1u << 29)

	/* 0x20: Backup domain control register */
	uint32_t volatile BDCTL;
#define RCU_BDCTL_LXTALEN			(1u << 0)
#define RCU_BDCTL_LXTALSTB			(1u << 1)
#define RCU_BDCTL_LXTALBPS			(1u << 2)
#define RCU_BDCTL_RTCSRC(x)			((x) << 8)
#define RCU_BDCTL_RTCSRC_MASK			RCU_BDCTL_RTCSRC(B00000011)
#define RCU_BDCTL_RTCSRC_OFF			B00000000
#define RCU_BDCTL_RTCSRC_LXTAL			B00000001
#define RCU_BDCTL_RTCSRC_IRC40K			B00000010
#define RCU_BDCTL_RTCSRC_HXTAL			B00000011
#define RCU_BDCTL_RTCEN				(1u << 15)
#define RCU_BDCTL_BKPRST			(1u << 16)

	/* 0x24: Reset source/clock register */
	uint32_t volatile RSTSCK;
#define RCU_RSTSCK_IRC40KEN			(1u << 0)
#define RCU_RSTSCK_IRC40KSTB			(1u << 1)
#define RCU_RSTSCK_RSTFC			(1u << 24)
#define RCU_RSTSCK_EPRSTF			(1u << 26)
#define RCU_RSTSCK_PORRSTF			(1u << 27)
#define RCU_RSTSCK_SWRSTF			(1u << 28)
#define RCU_RSTSCK_FWDGTRSTF			(1u << 29)
#define RCU_RSTSCK_WWDGTRSTF			(1u << 30)
#define RCU_RSTSCK_LPRSTF			(1u << 31)

	/* 0x28: AHB reset register */
	uint32_t volatile AHBRST;
#define RCU_AHBRST_USBFSRST			(1u << 12)

	/* 0x2C: Clock configuration register 1 */
	uint32_t volatile CFG1;
#define RCU_CFG1_PREDV0(x)			((x) << 0)
#define RCU_CFG1_PREDV1(x)			((x) << 4)
#define RCU_CFG1_PREDV_MASK			RCU_CFG1_PREDV1(B00001111)
#define RCU_CFG1_PREDV_NORM			B00000000
#define RCU_CFG1_PREDV_DIV2			B00000001
#define RCU_CFG1_PREDV_DIV3			B00000010
#define RCU_CFG1_PREDV_DIV4			B00000011
#define RCU_CFG1_PREDV_DIV5			B00000100
#define RCU_CFG1_PREDV_DIV6			B00000101
#define RCU_CFG1_PREDV_DIV7			B00000110
#define RCU_CFG1_PREDV_DIV8			B00000111
#define RCU_CFG1_PREDV_DIV9			B00001000
#define RCU_CFG1_PREDV_DIV10			B00001001
#define RCU_CFG1_PREDV_DIV11			B00001010
#define RCU_CFG1_PREDV_DIV12			B00001011
#define RCU_CFG1_PREDV_DIV13			B00001100
#define RCU_CFG1_PREDV_DIV14			B00001101
#define RCU_CFG1_PREDV_DIV15			B00001110
#define RCU_CFG1_PREDV_DIV16			B00001111
#define RCU_CFG1_PLL1MF(x)			((x) << 8)
#define RCU_CFG1_PLL2MF(x)			((x) << 12)
#define RCU_CFG1_PLLMV_MASK			RCU_CFG1_PLL2MF(B00001111)
#define RCU_CFG1_PLLMV_X8			B00000110
#define RCU_CFG1_PLLMV_X9			B00000111
#define RCU_CFG1_PLLMV_X10			B00001000
#define RCU_CFG1_PLLMV_X11			B00001001
#define RCU_CFG1_PLLMV_X12			B00001010
#define RCU_CFG1_PLLMV_X13			B00001011
#define RCU_CFG1_PLLMV_X14			B00001100
#define RCU_CFG1_PLLMV_X15			B00001101
#define RCU_CFG1_PLLMV_X16			B00001110
#define RCU_CFG1_PLLMV_X20			B00001111
#define RCU_CFG1_PREDV0SEL			(1u << 16)
#define RCU_CFG1_I2S1SEL			(1u << 17)
#define RCU_CFG1_I2S2SEL			(1u << 18)

	/* 0x30 */
	uint8_t volatile RESERVED0[0x34-0x30];

	/* 0x34: Deep-sleep mode voltage register */
	uint32_t volatile DSV;
#define RCU_DSV_DSLPVS(x)			((x) << 0)
#define RCU_DSV_DSLPVS_MASK			RCU_DSV_DSLPVS(B00000011)
#define RCU_DSV_DSLPVS_1_2V			B00000000
#define RCU_DSV_DSLPVS_1_1V			B00000001
#define RCU_DSV_DSLPVS_1_0V			B00000010
#define RCU_DSV_DSLPVS_0_9V			B00000011

};
